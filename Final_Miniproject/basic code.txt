import tkinter as tk
import sqlite3

# Create or connect to the SQLite database
conn = sqlite3.connect('travel_booking.db')
cursor = conn.cursor()

# Create tables for passengers, travels, and bookings if they don't exist
cursor.execute('''CREATE TABLE IF NOT EXISTS passengers (
                    id INTEGER PRIMARY KEY,
                    name TEXT,
                    email TEXT
                )''')

cursor.execute('''CREATE TABLE IF NOT EXISTS travels (
                    id INTEGER PRIMARY KEY,
                    destination TEXT,
                    date TEXT
                )''')

cursor.execute('''CREATE TABLE IF NOT EXISTS bookings (
                    id INTEGER PRIMARY KEY,
                    passenger_id INTEGER,
                    travel_id INTEGER
                )''')

def insert_passenger(name, email):
    cursor.execute('INSERT INTO passengers (name, email) VALUES (?, ?)', (name, email))
    conn.commit()

def insert_travel(destination, date):
    cursor.execute('INSERT INTO travels (destination, date) VALUES (?, ?)', (destination, date))
    conn.commit()

def insert_booking(passenger_id, travel_id):
    cursor.execute('INSERT INTO bookings (passenger_id, travel_id) VALUES (?, ?)', (passenger_id, travel_id))
    conn.commit()

def display_passengers():
    cursor.execute('SELECT * FROM passengers')
    for row in cursor.fetchall():
        print(row)

def display_travels():
    cursor.execute('SELECT * FROM travels')
    for row in cursor.fetchall():
        print(row)

def display_bookings():
    cursor.execute('SELECT * FROM bookings')
    for row in cursor.fetchall():
        print(row)

def save_data():
    name = name_entry.get()
    email = email_entry.get()
    destination = destination_entry.get()
    date = date_entry.get()

    insert_passenger(name, email)
    insert_travel(destination, date)
    passenger_id = cursor.lastrowid
    travel_id = cursor.lastrowid
    insert_booking(passenger_id, travel_id)

    display_passengers()
    display_travels()
    display_bookings()

# Create the Tkinter window
root = tk.Tk()
root.title("Travel Booking App")

# Create input fields and labels for collecting data
name_label = tk.Label(root, text="Name:")
name_entry = tk.Entry(root)

email_label = tk.Label(root, text="Email:")
email_entry = tk.Entry(root)

destination_label = tk.Label(root, text="Destination:")
destination_entry = tk.Entry(root)

date_label = tk.Label(root, text="Date:")
date_entry = tk.Entry(root)

save_button = tk.Button(root, text="Save Data", command=save_data)

# Pack widgets
name_label.pack()
name_entry.pack()
email_label.pack()
email_entry.pack()
destination_label.pack()
destination_entry.pack()
date_label.pack()
date_entry.pack()
save_button.pack()

root.mainloop()

# Close the database connection when the tkinter window is closed
root.protocol("WM_DELETE_WINDOW", lambda: (conn.close(), root.destroy()))
